#1.

По дефолту:
	Person() : firstName("John"), lastName("Doe"), age(0), salary(0.0){};
Как и в функциях:
	struct Employee
	{
    		short id{2};
    		int age{10};
    		double salary{0.0};
	};
С помощью точки:
	Employee john; 
	john.id = 8; 
Через указатель:
	Man *ptr = &man;
	ptr->weight = 60;
 
#2.

Чтобы вводить значение по умолчанию.

#3.

Идиома RAII - это идиома объектно-ориентированного программирования, 
при которой использование ресурсов привязывается к времени жизни объектов с автоматической продолжительностью жизни. 
Ресурс (например, память, файл или база данных) обычно приобретается в конструкторе объекта 
(хотя этот ресурс может быть получен и после создания объекта, если в этом есть смысл). 
Затем этот ресурс можно использовать, пока объект жив. Ресурс освобождается в деструкторе при уничтожении объекта. 
Основным преимуществом RAII является то, что это помогает предотвратить утечку ресурсов 
(например, памяти, которая не была освобождена), так как все объекты, содержащие ресурсы, автоматически очищаются. 

#4.

Основные причины:
	1) Если ограничено место для хранения информации, можно сохранить несколько логических (истина/ложь) переменных в одном байте.
	2) Некоторые интерфейсы устройств передают информацию, закодировав биты в один байт.
	3) Некоторым процедурам кодирования необходимо получить доступ к отдельным битам в байте.

#5

Классы enum (или «перечисления с областью видимости»), которые добавляют перечислениям
локальную область видимости со всеми её правилами.
	enum Fruits
    	{
        	LEMON, // LEMON находится внутри той же области видимости, что и Fruits
        	KIWI
    	};
 
    	enum Colors
    	{
        	PINK, // PINK находится внутри той же области видимости, что и Colors
        	GRAY
    	};
Если в обычных перечислениях сравнить (Fruits fruit = LEMON) и (Colors color = PINK), 
то компилятор неявно преобразует переменные в целочисленные значения и приравняет их, 
что исправляется классами enum («перечисления с областью видимости»).
